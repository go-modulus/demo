// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"

	"github.com/gofrs/uuid"
)

type Conversation interface {
	IsConversation()
}

type ConversationResult interface {
	IsConversationResult()
}

type CreateMessageResult interface {
	IsCreateMessageResult()
}

type CreateOneToOneConversationResult interface {
	IsCreateOneToOneConversationResult()
}

type DeleteMessageResult interface {
	IsDeleteMessageResult()
}

type EditMessageResult interface {
	IsEditMessageResult()
}

type Error interface {
	IsError()
	GetMessage() string
}

type Message interface {
	IsMessage()
}

type MessagesResult interface {
	IsMessagesResult()
}

type MyConversationsResult interface {
	IsMyConversationsResult()
}

type RemoveDraftResult interface {
	IsRemoveDraftResult()
}

type RichTextPart interface {
	IsRichTextPart()
}

type SaveDraftResult interface {
	IsSaveDraftResult()
}

type ValidationRule interface {
	IsValidationRule()
	GetMessage() string
}

type ConversationBox struct {
	Value Conversation `json:"value"`
}

func (ConversationBox) IsConversationResult() {}

type ConversationEdge struct {
	Cursor string       `json:"cursor"`
	Node   Conversation `json:"node"`
}

type ConversationList struct {
	Edges    []*ConversationEdge `json:"edges"`
	PageInfo *PageInfo           `json:"pageInfo"`
}

func (ConversationList) IsMyConversationsResult() {}

type Draft struct {
	ConversationID uuid.UUID  `json:"conversationId"`
	MessageID      *uuid.UUID `json:"messageId"`
	RichText       *RichText  `json:"richText"`
}

func (Draft) IsSaveDraftResult() {}

type ErrInvalidInput struct {
	Message string          `json:"message"`
	Fields  []*InvalidField `json:"fields"`
}

func (ErrInvalidInput) IsError()                {}
func (this ErrInvalidInput) GetMessage() string { return this.Message }

func (ErrInvalidInput) IsConversationResult() {}

func (ErrInvalidInput) IsMyConversationsResult() {}

func (ErrInvalidInput) IsCreateOneToOneConversationResult() {}

func (ErrInvalidInput) IsSaveDraftResult() {}

func (ErrInvalidInput) IsRemoveDraftResult() {}

func (ErrInvalidInput) IsMessagesResult() {}

func (ErrInvalidInput) IsCreateMessageResult() {}

func (ErrInvalidInput) IsEditMessageResult() {}

func (ErrInvalidInput) IsDeleteMessageResult() {}

type ErrTextTooLong struct {
	Message       string `json:"message"`
	CurrentLength int    `json:"currentLength"`
	MaxLength     int    `json:"maxLength"`
}

func (ErrTextTooLong) IsCreateMessageResult() {}

func (ErrTextTooLong) IsEditMessageResult() {}

func (ErrTextTooLong) IsError()                {}
func (this ErrTextTooLong) GetMessage() string { return this.Message }

type ErrUnauthorized struct {
	Message string `json:"message"`
}

func (ErrUnauthorized) IsError()                {}
func (this ErrUnauthorized) GetMessage() string { return this.Message }

func (ErrUnauthorized) IsConversationResult() {}

func (ErrUnauthorized) IsMyConversationsResult() {}

func (ErrUnauthorized) IsCreateOneToOneConversationResult() {}

func (ErrUnauthorized) IsSaveDraftResult() {}

func (ErrUnauthorized) IsRemoveDraftResult() {}

func (ErrUnauthorized) IsMessagesResult() {}

func (ErrUnauthorized) IsCreateMessageResult() {}

func (ErrUnauthorized) IsEditMessageResult() {}

func (ErrUnauthorized) IsDeleteMessageResult() {}

type ErrUnknownConversation struct {
	Message string `json:"message"`
}

func (ErrUnknownConversation) IsConversationResult() {}

func (ErrUnknownConversation) IsError()                {}
func (this ErrUnknownConversation) GetMessage() string { return this.Message }

func (ErrUnknownConversation) IsSaveDraftResult() {}

func (ErrUnknownConversation) IsRemoveDraftResult() {}

func (ErrUnknownConversation) IsMessagesResult() {}

func (ErrUnknownConversation) IsCreateMessageResult() {}

type ErrUnknownMessage struct {
	Message string `json:"message"`
}

func (ErrUnknownMessage) IsSaveDraftResult() {}

func (ErrUnknownMessage) IsEditMessageResult() {}

func (ErrUnknownMessage) IsDeleteMessageResult() {}

func (ErrUnknownMessage) IsError()                {}
func (this ErrUnknownMessage) GetMessage() string { return this.Message }

type ErrUnknownReceiver struct {
	Message string `json:"message"`
}

func (ErrUnknownReceiver) IsCreateOneToOneConversationResult() {}

func (ErrUnknownReceiver) IsError()                {}
func (this ErrUnknownReceiver) GetMessage() string { return this.Message }

type InvalidField struct {
	Field string         `json:"field"`
	Rule  ValidationRule `json:"rule"`
}

type MessageEdge struct {
	Cursor string  `json:"cursor"`
	Node   Message `json:"node"`
}

type MessageList struct {
	Edges    []*MessageEdge `json:"edges"`
	PageInfo *PageInfo      `json:"pageInfo"`
}

func (MessageList) IsMessagesResult() {}

type OneToOneConversation struct {
	ID          uuid.UUID `json:"id"`
	Draft       *Draft    `json:"draft"`
	LastMessage Message   `json:"lastMessage"`
	CreatedAt   time.Time `json:"createdAt"`
}

func (OneToOneConversation) IsCreateOneToOneConversationResult() {}

func (OneToOneConversation) IsConversation() {}

type PageInfo struct {
	StartCursor     string `json:"startCursor"`
	EndCursor       string `json:"endCursor"`
	HasNextPage     bool   `json:"hasNextPage"`
	HasPreviousPage bool   `json:"hasPreviousPage"`
}

type PlainRichText struct {
	Text string `json:"text"`
}

func (PlainRichText) IsRichTextPart() {}

type RichText struct {
	Text  *string        `json:"text"`
	Parts []RichTextPart `json:"parts"`
}

type TextMessage struct {
	ID             uuid.UUID `json:"id"`
	ConversationID uuid.UUID `json:"conversationId"`
	RichText       *RichText `json:"richText"`
	UpdatedAt      time.Time `json:"updatedAt"`
	CreatedAt      time.Time `json:"createdAt"`
}

func (TextMessage) IsCreateMessageResult() {}

func (TextMessage) IsEditMessageResult() {}

func (TextMessage) IsMessage() {}

type UUIDRule struct {
	Message string `json:"message"`
}

func (UUIDRule) IsValidationRule()       {}
func (this UUIDRule) GetMessage() string { return this.Message }

type VoidBox struct {
	Value interface{} `json:"value"`
}

func (VoidBox) IsRemoveDraftResult() {}

func (VoidBox) IsDeleteMessageResult() {}
